// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String?  @unique
  posts          Post[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String
  published Boolean  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slug], name: "post_slug_index")
}

// Email status for workflow
enum EmailStatus {
  PENDING_REVIEW
  SENT
  REJECTED
}

model Email {
  id           String       @id @default(cuid())
  organisationId String 
  subject      String
  body         String
  recipients   String[]
  attachments  Attachment[]
  status       EmailStatus  @default(PENDING_REVIEW)
  createdBy   String
  createdById  String

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Attachment {
  id        String   @id @default(cuid())
  fileName  String
  fileType  String
  fileData  Bytes
  email     Email    @relation(fields: [emailId], references: [id])
  emailId   String
}